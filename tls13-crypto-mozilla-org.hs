{-# LANGUAGE OverloadedStrings #-}

module Main where

import Data.ByteString as B
import Data.ByteString.Char8 ()
import Network.Socket
import qualified Network.Socket.ByteString as SB

main :: IO ()
main = do
    let hints = defaultHints { addrFlags = [AI_NUMERICHOST,AI_NUMERICSERV], addrSocketType = Stream }
    addr:_ <- getAddrInfo (Just hints) (Just "52.32.149.186") (Just "443")
    sock <- socket (addrFamily addr) (addrSocketType addr) (addrProtocol addr)
    setSocketOption sock NoDelay 1
    connect sock (addrAddress addr)
    SB.sendAll sock record
    r <- SB.recv sock 1024
    if (r `index` 9) == 0x7f && (r `index` 10) == 18 then
        Prelude.putStrLn "TLS 1.3"
      else
        Prelude.putStrLn "TLS 1.2"

record :: ByteString
record = B.concat [
    recordHeader
  , B.pack [fromIntegral lu,fromIntegral ll]
  , handshake
  ]
  where
    elen = B.length handshake
    (lu,ll) = elen `divMod` 256

recordHeader :: ByteString
recordHeader = pack
    [0x16 -- handshake
    ,0x03, 0x01 -- TLS v1.x
--    ,0x02, 0x00 -- length = 512
    ]


handshake :: ByteString
handshake = B.concat [
    handshakeHeader
  , B.pack [0x00,fromIntegral lu,fromIntegral ll]
  , handshakeBody
  ]
  where
    elen = B.length handshakeBody
    (lu,ll) = elen `divMod` 256

handshakeHeader :: ByteString
handshakeHeader = pack
    [0x01 -- client hello
--    ,0x00, 0x01, 0xfc -- length = 508
    ]


handshakeBody :: ByteString
handshakeBody = B.concat [
    clientHello
  , B.pack [fromIntegral lu,fromIntegral ll]
  , extensions
  ]
  where
    elen = B.length extensions
    (lu,ll) = elen `divMod` 256

clientHello :: ByteString
clientHello = pack
    [0x03, 0x03 -- TLS v1.2
    ,0x93, 0x7b, 0xf6, 0xdd, 0x47, 0xa9, 0xa4, 0xd8 -- random
    ,0x55, 0x5b, 0x07, 0x31, 0xeb, 0x37, 0x50, 0xd8
    ,0x50, 0x6f, 0xf7, 0x06, 0x98, 0xbc, 0x3e, 0x9d
    ,0x3d, 0x0f, 0xac, 0xf2, 0x2e, 0x6e, 0x89, 0x07
    ,0x00 -- session id (len)
    ,0x00, 0x20 -- cipher suites (len)
    ,0x13, 0x01
    ,0x13, 0x03
    ,0x13, 0x02
    ,0xc0, 0x2b
    ,0xc0, 0x2f
    ,0xcc, 0xa9
    ,0xcc, 0xa8
    ,0xc0, 0x2c
    ,0xc0, 0x30
    ,0xc0, 0x13
    ,0xc0, 0x14
    ,0x00, 0x33
    ,0x00, 0x39
    ,0x00, 0x2f
    ,0x00, 0x35
    ,0x00, 0x0a
    ,0x01, 0x00 -- compression = null
--    ,0x01, 0xb3 -- extensions (len = 435)
    ]

extensions :: ByteString
extensions = B.concat [
--    padding
--   ,serverName
--   ,extendedMasterSecret
--   ,renegotiationInfo
    ellipticCurves
--   ,ecPointFormats
--   ,sessionTicket
---   ,alpn
--   ,statusRequest
--   ,signedCertificateTimestamp
   ,keyShare
   ,supportedVersions
--   ,unkown65283
   ,signatureAlgorithms
--   ,pskExModes
   ]

padding :: ByteString
padding = pack
    [0x00,0x15,0x00,0xa8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ]

serverName :: ByteString
serverName = pack [
    0x00,0x00,0x00,0x1d,0x00,0x1b,0x00,0x00,0x18,0x74,0x6c,0x73,0x31,0x33,0x2e,0x63
   ,0x72,0x79,0x70,0x74,0x6f,0x2e,0x6d,0x6f,0x7a,0x69,0x6c,0x6c,0x61,0x2e,0x6f,0x72
   ,0x67
   ]

extendedMasterSecret :: ByteString
extendedMasterSecret = pack [0x00,0x17,0x00,0x00]

renegotiationInfo :: ByteString
renegotiationInfo = pack [0xff,0x01,0x00,0x01,0x00]

ellipticCurves :: ByteString
ellipticCurves = pack [
    0x00,0x0a -- id
   ,0x00,0x0e -- len
   ,0x00,0x0c -- len
   ,0x00,0x1d -- X25519
   ,0x00,0x17 -- P256
   ,0x00,0x18 -- P384
   ,0x00,0x19 -- P512
   ,0x01,0x00 -- Private
   ,0x01,0x01 -- Private
   ]

ecPointFormats :: ByteString
ecPointFormats = pack [0x00,0x0b,0x00,0x02,0x01,0x00]

sessionTicket :: ByteString
sessionTicket = pack [0x00,0x23,0x00,0x00]

alpn :: ByteString
alpn = pack [
    0x00,0x10,0x00,0x0e,0x00,0x0c,0x02,0x68,0x32,0x08
   ,0x68,0x74,0x74,0x70,0x2f,0x31,0x2e,0x31
   ]

statusRequest :: ByteString
statusRequest = pack [
    0x00,0x05,0x00,0x05,0x01,0x00,0x00,0x00,0x00
  ]

signedCertificateTimestamp :: ByteString
signedCertificateTimestamp = pack [
    0x00,0x12,0x00,0x00
  ]

keyShare :: ByteString
keyShare = pack [
    0x00,0x28 -- id
   ,0x00,0x6b -- len
   ,0x00,0x69 -- len
   ,0x00,0x1d -- group: x25519
   ,0x00,0x20 -- len
   ,0xc1,0x15,0xdd,0xa2,0x7a,0x68,0x56,0x89,0x51,0x15,0x7a,0x1a,0xcc,0x48,0xe0,0xdd
   ,0x02,0x9e,0x6d,0xc8,0x99,0x08,0xb8,0xee,0x08,0x8b,0xc1,0xdd,0x5d,0x18,0xfe,0x7a
   ,0x00,0x17 -- group: P256
   ,0x00,0x41 -- len
   ,0x04,0x43,0x04,0x25,0xe4,0x75,0x99,0xb5,0x51,0xc8,0xd0,0x3c,0x30,0xae,0x4f,0xb5
   ,0xd8,0xd4,0x30,0xee,0x35,0x0c,0x60,0x40,0x80,0x34,0x7d,0x59,0xc4,0x50,0x74,0xe5
   ,0xaf,0x5b,0x12,0x56,0x1b,0x7a,0x7b,0xf9,0xac,0x3b,0x44,0x27,0x8f,0x50,0x62,0xf3
   ,0x8d,0xc1,0xc6,0x2b,0x35,0x23,0xbd,0x0d,0x2a,0xc5,0xb7,0xa2,0x8d,0x2c,0x72,0xf2
   ,0x0e
   ]

supportedVersions :: ByteString
supportedVersions = pack [
    0x00,0x2b -- id
   ,0x00,0x03
   ,0x02
   ,0x7f,0x12
   ]

unkown65283 :: ByteString
unkown65283 = pack [
    0xff,0x03,0x00,0x00
   ]

signatureAlgorithms :: ByteString
signatureAlgorithms = pack [
    0x00,0x0d -- id
   ,0x00,0x18 -- len
   ,0x00,0x16 -- len
   ,0x04,0x03 -- ecdsa_secp256r1_sha256
   ,0x05,0x03 -- ecdsa_secp384r1_sha384
   ,0x06,0x03 -- ecdsa_secp521r1_sha512
   ,0x08,0x04 -- rsa_pss_sha256
   ,0x08,0x05 -- rsa_pss_sha384
   ,0x08,0x06 -- rsa_pss_sha512
   ,0x04,0x01 -- rsa_pkcs1_sha256
   ,0x05,0x01 -- rsa_pkcs1_sha384
   ,0x06,0x01 -- rsa_pkcs1_sha512
   ,0x02,0x03
   ,0x02,0x01 -- rsa_pkcs1_sha1
   ]

pskExModes :: ByteString
pskExModes = pack [
    0x00,0x2d,0x00,0x02,0x01,0x01
   ]

{-
0000  00 1b 63 f1 8e 11 28 37 37 22 ec 2c 08 00 45 02   ..c...(77".,..E.
0010  02 39 06 3b 40 00 40 06 5d a4 0a 00 01 04 34 20   .9.;@.@.].....4 
0020  95 ba e5 ed 01 bb f5 41 4b 43 19 b4 4d 88 80 18   .......AKC..M...
0030  10 15 5c 4c 00 00 01 01 08 0a 41 c1 73 b2 18 7c   ..\L......A.s..|
0040  6a 00 16 03 01 02 00 01 00 01 fc 03 03 93 7b f6   j.............{.
0050  dd 47 a9 a4 d8 55 5b 07 31 eb 37 50 d8 50 6f f7   .G...U[.1.7P.Po.
0060  06 98 bc 3e 9d 3d 0f ac f2 2e 6e 89 07 00 00 20   ...>.=....n.... 
0070  13 01 13 03 13 02 c0 2b c0 2f cc a9 cc a8 c0 2c   .......+./.....,
0080  c0 30 c0 13 c0 14 00 33 00 39 00 2f 00 35 00 0a   .0.....3.9./.5..
0090  01 00 01 b3 00 15 00 a8 00 00 00 00 00 00 00 00   ................
00a0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
00b0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
00c0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
00d0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
00e0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
00f0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
0100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
0110  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
0120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
0130  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................
0140  00 00 00 1d 00 1b 00 00 18 74 6c 73 31 33 2e 63   .........tls13.c
0150  72 79 70 74 6f 2e 6d 6f 7a 69 6c 6c 61 2e 6f 72   rypto.mozilla.or
0160  67 00 17 00 00 ff 01 00 01 00 00 0a 00 0e 00 0c   g...............
0170  00 1d 00 17 00 18 00 19 01 00 01 01 00 0b 00 02   ................
0180  01 00 00 23 00 00 00 10 00 0e 00 0c 02 68 32 08   ...#.........h2.
0190  68 74 74 70 2f 31 2e 31 00 05 00 05 01 00 00 00   http/1.1........
01a0  00 00 12 00 00 00 28 00 6b 00 69 00 1d 00 20 c1   ......(.k.i... .
01b0  15 dd a2 7a 68 56 89 51 15 7a 1a cc 48 e0 dd 02   ...zhV.Q.z..H...
01c0  9e 6d c8 99 08 b8 ee 08 8b c1 dd 5d 18 fe 7a 00   .m.........]..z.
01d0  17 00 41 04 43 04 25 e4 75 99 b5 51 c8 d0 3c 30   ..A.C.%.u..Q..<0
01e0  ae 4f b5 d8 d4 30 ee 35 0c 60 40 80 34 7d 59 c4   .O...0.5.`@.4}Y.
01f0  50 74 e5 af 5b 12 56 1b 7a 7b f9 ac 3b 44 27 8f   Pt..[.V.z{..;D'.
0200  50 62 f3 8d c1 c6 2b 35 23 bd 0d 2a c5 b7 a2 8d   Pb....+5#..*....
0210  2c 72 f2 0e 00 2b 00 09 08 7f 12 03 03 03 02 03   ,r...+..........
0220  01 ff 03 00 00 00 0d 00 18 00 16 04 03 05 03 06   ................
0230  03 08 04 08 05 08 06 04 01 05 01 06 01 02 03 02   ................
0240  01 00 2d 00 02 01 01
-}
